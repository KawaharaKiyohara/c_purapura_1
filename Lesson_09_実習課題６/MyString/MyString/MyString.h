#pragma once
class MyString
{
public:
	MyString();
	~MyString();

	////////////////////////////////
	//関数概要　代入演算子をオーバーロード。
	//			文字列をコピーする。
	//引数      str:コピー元の文字列。
	void operator=(const char* str);

	////////////////////////////////
	//関数概要　文字列のコピーを行うメンバ関数。
	//引数　　　str:コピー元の文字列。
	void Copy(const char* str);

	////////////////////////////////
	//関数概要　文字列の連結を行うメンバ関数。
	//引数　　　str：m_stringの後ろに連結される文字列。
	void Add(const char* str);

	////////////////////////////////
	//関数概要　+=演算子をオーバーロード。
	//          文字列の連結を行う。
	//引数　　　str:m_stringの後ろに連結される文字列。
	void operator+=(const char* str);
	
	////////////////////////////////
	//関数概要　m_stringが指している文字列の長さを求める関数。
	//戻り値　　ヌル文字を含まない文字数を返す。
	int Length();

	////////////////////////////////
	//関数概要　m_stringが指している文字列から、chが記録されている
	//　　　　　位置を返す関数。
	//引数　　　検索する文字
	//戻り値　　文字が見つかった位置。見つからなかった場合は-1を返す。
	int Search(char ch);

	////////////////////////////////
	//関数概要　m_stringが指している文字列に文字を挿入する関数。
	//引数　　　insertPos:挿入位置。
	//引数      ch:挿入する文字。
	void Insert(int insertPos, char ch);

	//文字列の先頭アドレスを記録するためのメンバ変数を追加する。
	//一応nullptrで初期化しておく。
	char* m_string = nullptr;	
};

