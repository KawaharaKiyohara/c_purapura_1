#pragma once

/////////////////////////////////////////////////////
// 定数。
/////////////////////////////////////////////////////
const int MAX_FOOD = 512;		//食べ物の最大数。

/////////////////////////////////////////////////////
// 構造体の宣言。
/////////////////////////////////////////////////////
/*!----------------------------------------------------
 * @brief	食べ物の構造体。
----------------------------------------------------*/
struct SFood {
	int posX = 0;	//X座標。
	int posY = 0;	//Y座標。
	int isDead = 0;	//死亡フラグ。
};

/////////////////////////////////////////////////////
// グローバル変数のextern宣言。
// extern宣言は、「実体はどこかにあるから、それを使ってね」
// と教えるものです。変数の定義はどこかのcppファイルにある必要があります。
//
/////////////////////////////////////////////////////
extern SFood g_foodArray[MAX_FOOD];		//食べ物の配列。実体はFood.cppにあります。

/////////////////////////////////////////////////////
// グローバル関数の関数宣言。
/////////////////////////////////////////////////////
/*!----------------------------------------------------
* @brief	食べ物の初期化。
* @detail
*   座標の更新とか、状態の更新とかを行う。
*@param[in]	foodNo		更新を行う食べ物の番号。
*@param[in]	posX		初期のX座標。
*@param[in] posY		初期のY座標。
----------------------------------------------------*/
void FoodInitialyze(int foodNo, int posX, int posY);

/*!----------------------------------------------------
* @brief	食べ物の更新処理。
* @detail
*   座標の更新とか、状態の更新とかを行う。
*@param[in]	enemyNo		更新を行う食べ物の番号。
----------------------------------------------------*/
void FoodUpdate(int foodNo);

/*!----------------------------------------------------
* @brief	食べ物を描画。
*@param[in]	enemyNo		更新を行う食べ物の番号。
----------------------------------------------------*/
void FoodDraw(int foodNo);
